



Independent                                                    H. Butler
Internet-Draft                                                 Hobu Inc.
Intended status: Informational                                   M. Daly
Expires: October 29, 2013                                        Cadcorp
                                                                A. Doyle
                                                                     MIT
                                                              S. Gillies
                                                         UNC-Chapel Hill
                                                          April 27, 2013


The Geospatial JavaScript Object Notation (GeoJSON) Format Specification
                  draft-sdrees-geojson-format-spec-01

Abstract

   GeoJSON is a geospatial data interchange format based on JavaScript
   Object Notation (JSON).

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 29, 2013.

Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of



Butler, et al.          Expires October 29, 2013                [Page 1]

Internet-Draft        GeoJSON Format Specification            April 2013


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Conventions Used in This Document . . . . . . . . . . . .   3
     1.2.  Definitions . . . . . . . . . . . . . . . . . . . . . . .   3
     1.3.  Example . . . . . . . . . . . . . . . . . . . . . . . . .   4
   2.  GeoJSON Object  . . . . . . . . . . . . . . . . . . . . . . .   5
     2.1.  Geometry Object . . . . . . . . . . . . . . . . . . . . .   5
       2.1.1.  Position  . . . . . . . . . . . . . . . . . . . . . .   6
       2.1.2.  Point . . . . . . . . . . . . . . . . . . . . . . . .   6
       2.1.3.  MultiPoint  . . . . . . . . . . . . . . . . . . . . .   6
       2.1.4.  LineString  . . . . . . . . . . . . . . . . . . . . .   6
       2.1.5.  MultiLineString . . . . . . . . . . . . . . . . . . .   6
       2.1.6.  Polygon . . . . . . . . . . . . . . . . . . . . . . .   7
       2.1.7.  MultiPolygon  . . . . . . . . . . . . . . . . . . . .   7
       2.1.8.  Geometry Collection . . . . . . . . . . . . . . . . .   7
     2.2.  Feature Object  . . . . . . . . . . . . . . . . . . . . .   7
     2.3.  Feature Collection Object . . . . . . . . . . . . . . . .   7
   3.  Coordinate Reference System (CRS) Reference . . . . . . . . .   8
     3.1.  Named CRS Reference . . . . . . . . . . . . . . . . . . .   8
     3.2.  Linked CRS Reference  . . . . . . . . . . . . . . . . . .   8
   4.  Bounding Box  . . . . . . . . . . . . . . . . . . . . . . . .   9
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  10
     7.2.  Informative References  . . . . . . . . . . . . . . . . .  10
   Appendix A.  Geometry Examples  . . . . . . . . . . . . . . . . .  10
     A.1.  Point . . . . . . . . . . . . . . . . . . . . . . . . . .  10
     A.2.  LineString  . . . . . . . . . . . . . . . . . . . . . . .  11
     A.3.  Polygon . . . . . . . . . . . . . . . . . . . . . . . . .  11
     A.4.  MultiPoint  . . . . . . . . . . . . . . . . . . . . . . .  12
     A.5.  MultiLineString . . . . . . . . . . . . . . . . . . . . .  12
     A.6.  MultiPolygon  . . . . . . . . . . . . . . . . . . . . . .  12
     A.7.  GeometryCollection  . . . . . . . . . . . . . . . . . . .  13
   Appendix B.  Contributors . . . . . . . . . . . . . . . . . . . .  14
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  14

1.  Introduction

   Geospatial JavaScript Object Notation (GeoJSON) is a format for
   encoding a variety of geographic data structures.  A GeoJSON object
   may represent a geometry, a feature, or a collection of features.

   GeoJSON supports the following seven geometry types:



Butler, et al.          Expires October 29, 2013                [Page 2]

Internet-Draft        GeoJSON Format Specification            April 2013


   o  Point

   o  LineString

   o  Polygon

   o  MultiPoint

   o  MultiLineString

   o  MultiPolygon

   o  GeometryCollection

   Features in GeoJSON contain a geometry object and additional
   properties, and a feature collection represents a list of features.

   A complete GeoJSON data structure is always an object (in JSON
   terms).  In GeoJSON, an object consists of a collection of name/value
   pairs -- also called members.  For each member, the name is always a
   string.  Member values are either a string, number, object, array or
   one of the JSON literals: true, false, and null.  An array consists
   of elements where each element is a value as described above.

1.1.  Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   Some examples use the combination of a JavaScript single line comment
   (//) followed by an ellipsis (...) as placeholder notation for
   content deemed irrelevant by the authors and at that point.  These
   placeholders must of course be deleted or otherwise replaced, before
   attempting to validate the corresponding JSON code example.

1.2.  Definitions

   o  JavaScript Object Notation (JSON), and the terms object, name,
      value, array, number, true, false, and null are to be interpreted
      as defined in [RFC4627].

   o  The Hypertext Transfer Protocol (http) is defined in [RFC2616].

   o  Transport Layer Security (TLS) is defined in [RFC5246].

   o  Hypertext Transfer Protocol Over TLS (https) is defined in
      [RFC2818].



Butler, et al.          Expires October 29, 2013                [Page 3]

Internet-Draft        GeoJSON Format Specification            April 2013


   o  The Uniform Resource Identifier (URI) is defined in [RFC3986].

1.3.  Example

   A GeoJSON feature collection:

   {
       "type": "FeatureCollection",
       "features": [{
           "type": "Feature",
           "geometry": {
               "type": "Point",
               "coordinates": [102.0, 0.5]
           },
           "properties": {
               "prop0": "value0"
           }
       }, {
           "type": "Feature",
           "geometry": {
               "type": "LineString",
               "coordinates": [
                   [102.0, 0.0],
                   [103.0, 1.0],
                   [104.0, 0.0],
                   [105.0, 1.0]
               ]
           },
           "properties": {
               "prop0": "value0",
               "prop1": 0.0
           }
       }, {
           "type": "Feature",
           "geometry": {
               "type": "Polygon",
               "coordinates": [
                   [
                       [100.0, 0.0],
                       [101.0, 0.0],
                       [101.0, 1.0],
                       [100.0, 1.0],
                       [100.0, 0.0]
                   ]
               ]
           },
           "properties": {
               "prop0": "value0",



Butler, et al.          Expires October 29, 2013                [Page 4]

Internet-Draft        GeoJSON Format Specification            April 2013


               "prop1": {
                   "this": "that"
               }
           }
       }]
   }


   Note that unquoted whitespace is not significant in JSON.  Whitespace
   is used in the examples inside this document to help illustrate the
   data structures, but is not required.

2.  GeoJSON Object

   As stated in the introduction, a complete Geospatial JSON (GeoJSON)
   data structure is always represented as a single JSON object that
   represents a geometry, feature, or collection of features and will be
   referred to as the GeoJSON object in this document.

   o  The GeoJSON object MAY have one or more members (name/value
      pairs).

   o  The GeoJSON object MUST have a member with the name "type".  This
      member's value is a string that determines the type of the GeoJSON
      object.

   o  The value of the type member must be one of: "Point",
      "MultiPoint", "LineString", "MultiLineString", "Polygon",
      "MultiPolygon", "GeometryCollection", "Feature", or
      "FeatureCollection".  The case of the type member values must be
      as shown here.  If - depending on this value additional rules
      apply, these are stated in the sections below.

   o  A GeoJSON object MAY have an optional "crs" member.  If it is
      present, the value of it MUST be a valid coordinate reference
      system reference (see "3.  Coordinate Reference System (CRS)
      Reference [1]").

   o  A GeoJSON object MAY have a "bbox" member.  If it is present, the
      value of it MUST be a bounding box array (see "4.  Bounding Box").

2.1.  Geometry Object

   A geometry is a GeoJSON object where the type member's value is one
   of the following strings: "Point", "MultiPoint", "LineString",
   "MultiLineString", "Polygon", "MultiPolygon", or
   "GeometryCollection".




Butler, et al.          Expires October 29, 2013                [Page 5]

Internet-Draft        GeoJSON Format Specification            April 2013


   A GeoJSON geometry object of any type other than "GeometryCollection"
   MUST have a member with the name "coordinates".  The value of the
   coordinates member is always an array.  The structure for the
   elements in this array is determined by the type of geometry.

2.1.1.  Position

   A position is the fundamental geometry construct.  The "coordinates"
   member of a geometry object is composed of one position (in the case
   of a Point geometry), an array of positions (LineString or MultiPoint
   geometries), an array of arrays of positions (Polygons,
   MultiLineStrings), or a multidimensional array of positions
   (MultiPolygon).

   A position is represented by an array of numbers.  There MUST be two
   or more elements.  The order of elements must follow x, y, z order
   (easting, northing, altitude for coordinates in a projected
   coordinate reference system, or longitude, latitude, altitude for
   coordinates in a geographic coordinate reference system).  Any number
   of additional elements are allowed -- interpretation and meaning of
   additional elements is beyond the scope of this specification.

   Examples of positions and geometries are provided in "Appendix A.
   Geometry Examples".

2.1.2.  Point

   For type "Point", the "coordinates" member MUST be a single position.

2.1.3.  MultiPoint

   For type "MultiPoint", the "coordinates" member MUST be an array of
   positions.

2.1.4.  LineString

   For type "LineString", the "coordinates" member MUST be an array of
   two or more positions.

   A LinearRing is a closed LineString with 4 or more positions.  The
   first and last positions are equivalent (they represent equivalent
   points).  Though a LinearRing is not explicitly represented as a
   GeoJSON geometry type, it is referred to in the Polygon geometry type
   definition.

2.1.5.  MultiLineString





Butler, et al.          Expires October 29, 2013                [Page 6]

Internet-Draft        GeoJSON Format Specification            April 2013


   For type "MultiLineString", the "coordinates" member MUST be an array
   of LineString coordinate arrays.

2.1.6.  Polygon

   For type "Polygon", the "coordinates" member MUST be an array of
   LinearRing coordinate arrays.  For Polygons with multiple rings, the
   first MUST be the exterior ring and any others MUST be interior rings
   or holes.

2.1.7.  MultiPolygon

   For type "MultiPolygon", the "coordinates" member MUST be an array of
   Polygon coordinate arrays.

2.1.8.  Geometry Collection

   A GeoJSON object with type "GeometryCollection" is a geometry object
   which represents a collection of geometry objects.

   A geometry collection MUST have a member with the name "geometries".
   The value corresponding to "geometries" is an array.  Each element in
   this array is a GeoJSON geometry object.

2.2.  Feature Object

   A GeoJSON object with the type "Feature" is a feature object.

   o  A feature object MUST have a member with the name "geometry".  The
      value of the geometry member is a geometry object as defined above
      or a JSON null value.

   o  A feature object MUST have a member with the name "properties".
      The value of the properties member is an object (any JSON object
      or a JSON null value).

   o  If a feature has a commonly used identifier, that identifier
      SHOULD be included as a member of the feature object with the name
      "id".

2.3.  Feature Collection Object

   A GeoJSON object with the type "FeatureCollection" is a feature
   collection object.

   An object of type "FeatureCollection" MUST have a member with the
   name "features".  The value corresponding to "features" is an array.
   Each element in the array is a feature object as defined above.



Butler, et al.          Expires October 29, 2013                [Page 7]

Internet-Draft        GeoJSON Format Specification            April 2013


3.  Coordinate Reference System (CRS) Reference

   The coordinate reference system of a GeoJSON object is determined by
   its "crs" member (referred to as the CRS reference below).  If an
   object has no crs member, then its parent or grandparent object's crs
   member may be acquired.  If no crs member can be so acquired, the
   default CRS shall apply to the GeoJSON object.

   o  The default CRS is a geographic coordinate reference system, using
      the WGS84 datum, and with longitude and latitude units of decimal
      degrees.  Note-sdrees: FIXME mail from Adrian Custer states as
      *the two GeoJSON crs* CRS84 (an axis-flipped WGS84) and CRSGoogle
      (EPGS:3857).  So is this really WGS84 mentioned as default?

   o  The value of a member named "crs" must be a string (referred to as
      the CRS reference below) or JSON null.  If the value of CRS is
      null, no CRS can be assumed.  Note-sdrees: FIXME or default CRS as
      when crs member is left out?

   o  The crs member SHOULD be on the top-level GeoJSON object in a
      hierarchy (in feature collection, feature, geometry order) and not
      be repeated or overridden on children or grandchildren of the
      object.

   o  The referenced CRS SHALL NOT change coordinate ordering (see
      "2.1.1 Position").

3.1.  Named CRS Reference

   A CRS reference MAY indicate a coordinate reference system by name.
   In this case, the value of it MUST be a string identifying a
   coordinate reference system.  OGC CRS URNs such as
   "urn:ogc:def:crs:OGC:1.3:CRS84" SHALL be preferred over legacy
   identifiers such as "EPSG:4326":

   "crs": "urn:ogc:def:crs:OGC:1.3:CRS84"


3.2.  Linked CRS Reference

   A CRS reference may link to CRS parameters on the Web.  In this case,
   its value MUST be a dereferenceable http or https URL and the
   producer of a GeoJSON object SHOULD and is strongly encouraged to
   prefer absolute URLs over relative URLs as value to ease the
   disambiguation from a named CRS reference for the consumer of the
   object.





Butler, et al.          Expires October 29, 2013                [Page 8]

Internet-Draft        GeoJSON Format Specification            April 2013


4.  Bounding Box

   A GeoJSON object MAY have a member named "bbox" to include
   information on the coordinate range for geometries, features, or
   feature collections.  The value of the bbox member MUST be a array of
   length 2*n where n is the number of dimensions represented in the
   contained geometries, with the lowest values for all axes followed by
   the highest values.  The axes order of a bbox follows the axes order
   of geometries.  In addition, the coordinate reference system for the
   bbox is assumed to match the coordinate reference system of the
   GeoJSON object of which it is a member.

   Example of a bbox member on a feature:

   {
       "type": "Feature",
       "bbox": [-180.0, -90.0, 180.0, 90.0],
       "geometry": {
           "type": "Polygon",
           "coordinates": [
               [
                   [-180.0, 10.0],
                   [20.0, 90.0],
                   [180.0, -5.0],
                   [-30.0, -90.0]
               ]
           ]
       }
       //...
   }


   Example of a bbox member on a feature collection:

   {
       "type": "FeatureCollection",
       "bbox": [100.0, 0.0, 105.0, 1.0],
       "features": [
       //...
       ]
   }










Butler, et al.          Expires October 29, 2013                [Page 9]

Internet-Draft        GeoJSON Format Specification            April 2013


5.  Security Considerations

   This memo raises no security issues.

6.  IANA Considerations

   This document has no actions for IANA.

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,
              Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext
              Transfer Protocol -- HTTP/1.1", RFC 2616, June 1999.

   [RFC2818]  Rescorla, E., "HTTP Over TLS", RFC 2818, May 2000.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66, RFC
              3986, January 2005.

   [RFC4627]  Crockford, D., "The application/json Media Type for
              JavaScript Object Notation (JSON)", RFC 4627, July 2006.

7.2.  Informative References

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, August 2008.

Appendix A.  Geometry Examples

   Each of the examples below represents a valid and complete GeoJSON
   object.

A.1.  Point

   Point coordinates are in x, y order (easting, northing for projected
   coordinates, longitude, latitude for geographic coordinates):

   {
       "type": "Point",
       "coordinates": [100.0, 0.0]
   }




Butler, et al.          Expires October 29, 2013               [Page 10]

Internet-Draft        GeoJSON Format Specification            April 2013


A.2.  LineString

   Coordinates of LineString are an array of positions (see "2.1.1.
   Position"):

   {
       "type": "LineString",
       "coordinates": [
           [100.0, 0.0],
           [101.0, 1.0]
       ]
   }


A.3.  Polygon

   Coordinates of a Polygon are an array of LinearRing coordinate
   arrays.  The first element in the array represents the exterior ring.
   Any subsequent elements represent interior rings (or holes).

   No holes:

   {
       "type": "Polygon",
       "coordinates": [
           [
               [100.0, 0.0],
               [101.0, 0.0],
               [101.0, 1.0],
               [100.0, 1.0],
               [100.0, 0.0]
           ]
       ]
   }


   With holes:

   {
       "type": "Polygon",
       "coordinates": [
           [
               [100.0, 0.0],
               [101.0, 0.0],
               [101.0, 1.0],
               [100.0, 1.0],
               [100.0, 0.0]
           ],



Butler, et al.          Expires October 29, 2013               [Page 11]

Internet-Draft        GeoJSON Format Specification            April 2013


           [
               [100.2, 0.2],
               [100.8, 0.2],
               [100.8, 0.8],
               [100.2, 0.8],
               [100.2, 0.2]
           ]
       ]
   }


A.4.  MultiPoint

   Coordinates of a MultiPoint are an array of positions::

   {
       "type": "MultiPoint",
       "coordinates": [
           [100.0, 0.0],
           [101.0, 1.0]
       ]
   }


A.5.  MultiLineString

   Coordinates of a MultiLineString are an array of LineString
   coordinate arrays:

   {
       "type": "MultiLineString",
       "coordinates": [
           [
               [100.0, 0.0],
               [101.0, 1.0]
           ],
           [
               [102.0, 2.0],
               [103.0, 3.0]
           ]
       ]
   }


A.6.  MultiPolygon

   Coordinates of a MultiPolygon are an array of Polygon coordinate
   arrays:



Butler, et al.          Expires October 29, 2013               [Page 12]

Internet-Draft        GeoJSON Format Specification            April 2013


   {
       "type": "MultiPolygon",
       "coordinates": [
           [
               [
                   [102.0, 2.0],
                   [103.0, 2.0],
                   [103.0, 3.0],
                   [102.0, 3.0],
                   [102.0, 2.0]
               ]
           ],
           [
               [
                   [100.0, 0.0],
                   [101.0, 0.0],
                   [101.0, 1.0],
                   [100.0, 1.0],
                   [100.0, 0.0]
               ],
               [
                   [100.2, 0.2],
                   [100.8, 0.2],
                   [100.8, 0.8],
                   [100.2, 0.8],
                   [100.2, 0.2]
               ]
           ]
       ]
   }


A.7.  GeometryCollection

   Each element in the geometries array of a GeometryCollection is one
   of the geometry objects described above:

   {
       "type": "GeometryCollection",
       "geometries": [{
           "type": "Point",
           "coordinates": [100.0, 0.0]
       }, {
           "type": "LineString",
           "coordinates": [
               [101.0, 0.0],
               [102.0, 1.0]
           ]



Butler, et al.          Expires October 29, 2013               [Page 13]

Internet-Draft        GeoJSON Format Specification            April 2013


       }]
   }


Appendix B.  Contributors

   o  Howard Butler (Hobu Inc.),

   o  Martin Daly (Cadcorp),

   o  Allan Doyle (MIT),

   o  Sean Gillies (UNC-Chapel Hill),

   o  Tim Schaub (OpenGeo),

   o  Christopher Schmidt (MetaCarta)

   The GeoJSON format specification is the product of discussion on the
   GeoJSON list:

   http://lists.geojson.org/listinfo.cgi/geojson-geojson.org

Authors' Addresses

   H. Butler
   Hobu Inc.


   M. Daly
   Cadcorp


   A. Doyle
   MIT


   S. Gillies
   UNC-Chapel Hill











Butler, et al.          Expires October 29, 2013               [Page 14]
